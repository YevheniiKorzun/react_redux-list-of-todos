{"version":3,"sources":["store/actions.ts","store/index.ts","api/todos.ts","store/selectors.ts","api/user.ts","components/TodoListForm/TodoListForm.tsx","components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["LOAD_TODOS","LOAD_USER","LOAD_VISIBLE_TODOS","loadTodosAction","payload","type","loadVisibleTodosAction","loadUserAction","initialState","todos","visibleTodos","user","store","createStore","state","action","API_URL","getTodos","a","completed","fetch","response","json","getTodosSelector","getVisibleTodosSelector","getUserSelector","getUser","userId","TodoListForm","useState","title","setTitle","selectValue","setSelectValue","dispatch","useDispatch","useSelector","filteredTodos","useMemo","filter","todo","toLowerCase","includes","useEffect","getTodosBySelect","todosFromServer","length","newFilteredTodos","InputGroup","className","FormControl","placeholder","value","onChange","event","target","Form","Select","TodoList","selectUserHandler","userFromServer","loadTodosFromServer","map","cn","htmlFor","String","id","checked","readOnly","onClick","CurrentUser","currentUser","name","email","phone","App","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c2c4f75.chunk.js","sourcesContent":["import { Todo, User } from '../react-app-env';\n\nexport const LOAD_TODOS = 'LOAD_TODOS';\nexport const LOAD_USER = 'LOAD_USER';\nexport const LOAD_VISIBLE_TODOS = 'LOAD_VISIBLE_TODOS';\n\nexport const loadTodosAction = (payload: Todo[]) => ({\n  type: LOAD_TODOS,\n  payload,\n});\n\nexport const loadVisibleTodosAction = (payload: Todo[]) => ({\n  type: LOAD_VISIBLE_TODOS,\n  payload,\n});\n\nexport const loadUserAction = (payload: User | null) => ({\n  type: LOAD_USER,\n  payload,\n});\n","import { createStore } from 'redux';\nimport { State, Action } from '../react-app-env';\nimport {\n  LOAD_TODOS,\n  LOAD_VISIBLE_TODOS,\n  LOAD_USER,\n} from './actions';\n\nconst initialState: State = {\n  todos: [],\n  visibleTodos: [],\n  user: null,\n};\n\nconst reducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case LOAD_TODOS:\n      return {\n        ...state,\n        todos: [...action.payload],\n      };\n\n    case LOAD_VISIBLE_TODOS:\n      return {\n        ...state,\n        visibleTodos: [...action.payload],\n      };\n\n    case LOAD_USER:\n      return {\n        ...state,\n        user: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(reducer);\n","import { Todo } from '../react-app-env';\n\nconst API_URL = 'https://mate.academy/students-api/todos';\n\nexport const getTodos = async (completed = 'all'): Promise<Todo[]> => {\n  let response;\n\n  switch (completed) {\n    case 'active':\n      response = await fetch(`${API_URL}?completed=false`);\n      break;\n\n    case 'completed':\n      response = await fetch(`${API_URL}?completed=true`);\n      break;\n\n    default:\n      response = await fetch(API_URL);\n      break;\n  }\n\n  return response.json();\n};\n","import { State } from '../react-app-env';\n\nexport const getTodosSelector = (state: State) => state.todos;\nexport const getVisibleTodosSelector = (state: State) => state.visibleTodos;\nexport const getUserSelector = (state: State) => state.user;\n","import { User } from '../react-app-env';\n\nconst API_URL = 'https://mate.academy/students-api/users/';\n\nexport const getUser = async (userId: number): Promise<User> => {\n  const response = await fetch(`${API_URL}${userId}`);\n\n  return response.json();\n};\n","import React, { useMemo, useState, useEffect } from 'react';\nimport './TodoListForm.scss';\n\nimport {\n  InputGroup,\n  FormControl,\n  Form,\n} from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadVisibleTodosAction, loadTodosAction } from '../../store/actions';\nimport { getTodosSelector } from '../../store/selectors';\nimport { getTodos } from '../../api/todos';\n\nexport const TodoListForm: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [selectValue, setSelectValue] = useState('all');\n\n  const dispatch = useDispatch();\n  const todos = useSelector(getTodosSelector);\n\n  const filteredTodos = useMemo(() => {\n    return todos\n      .filter(todo => (todo.title.toLowerCase().includes(title.toLowerCase())));\n  }, [title]);\n\n  const changeTitleHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setTitle(value);\n  };\n\n  const changeSelectValueHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setSelectValue(value);\n  };\n\n  useEffect(() => {\n    dispatch(loadVisibleTodosAction(filteredTodos));\n  }, [title]);\n\n  useEffect(() => {\n    const getTodosBySelect = async () => {\n      const todosFromServer = await getTodos(selectValue);\n\n      dispatch(loadTodosAction(todosFromServer));\n\n      if (title.length) {\n        const newFilteredTodos = todosFromServer\n          .filter(todo => (todo.title.toLowerCase().includes(title.toLowerCase())));\n\n        dispatch(loadVisibleTodosAction(newFilteredTodos));\n      } else {\n        dispatch(loadVisibleTodosAction(todosFromServer));\n      }\n    };\n\n    getTodosBySelect();\n  }, [selectValue]);\n\n  return (\n    <div>\n      <InputGroup className=\"mb-3\">\n        <div className=\"TodoListForm__control-panel\">\n          <div className=\"TodoListForm__input\">\n            <FormControl\n              placeholder=\"Search by title\"\n              value={title}\n              onChange={changeTitleHandler}\n            />\n          </div>\n          <div className=\"TodoListForm__select\">\n            <Form.Select\n              value={selectValue}\n              onChange={changeSelectValueHandler}\n            >\n              <option value=\"all\">All</option>\n              <option value=\"active\">Active</option>\n              <option value=\"completed\">Completed</option>\n            </Form.Select>\n          </div>\n        </div>\n      </InputGroup>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport cn from 'classnames';\nimport { getTodos } from '../../api/todos';\nimport {\n  loadTodosAction,\n  loadVisibleTodosAction,\n  loadUserAction,\n} from '../../store/actions';\nimport { getVisibleTodosSelector, getUserSelector } from '../../store/selectors';\nimport './TodoList.scss';\nimport { getUser } from '../../api/user';\nimport { TodoListForm } from '../TodoListForm';\n\n// import {\n//   InputGroup,\n//   FormControl,\n//   Form,\n// } from 'react-bootstrap';\n// import { Loader } from '../Loader';\n// import { ErrorMessage } from '../ErrorMessage';\n\nexport const TodoList: React.FC = () => {\n  const dispatch = useDispatch();\n  const todos = useSelector(getVisibleTodosSelector);\n  const user = useSelector(getUserSelector);\n\n  const selectUserHandler = async (userId: number) => {\n    const userFromServer = await getUser(userId);\n\n    dispatch(loadUserAction(userFromServer));\n  };\n\n  useEffect(() => {\n    const loadTodosFromServer = async () => {\n      const todosFromServer = await getTodos();\n\n      dispatch(loadTodosAction(todosFromServer));\n      dispatch(loadVisibleTodosAction(todosFromServer));\n    };\n\n    loadTodosFromServer();\n  }, []);\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n\n      <div className=\"TodoList__list-container\">\n        <TodoListForm />\n\n        <ul className=\"TodoList__list\">\n          {todos.map(todo => (\n            <li\n              key={todo.id}\n              className={cn(\n                'TodoList__item',\n                { 'TodoList__item--unchecked': !todo.completed },\n                { 'TodoList__item--checked': todo.completed },\n              )}\n            >\n              <label htmlFor={String(todo.id)}>\n                <input\n                  id={String(todo.id)}\n                  type=\"checkbox\"\n                  checked={todo.completed}\n                  readOnly\n                />\n                <p>{todo.title}</p>\n              </label>\n\n              <button\n                className={cn(\n                  'TodoList__user-button button',\n                  { 'TodoList__user-button--selected': todo.userId === user?.id },\n                )}\n                type=\"button\"\n                onClick={() => selectUserHandler(todo.userId)}\n              >\n                User&nbsp;#\n                {todo.userId}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUserSelector } from '../../store/selectors';\nimport { loadUserAction } from '../../store/actions';\nimport './CurrentUser.scss';\n\nexport const CurrentUser: React.FC = () => {\n  const currentUser = useSelector(getUserSelector);\n  const dispatch = useDispatch();\n\n  const clearUserHandler = () => {\n    dispatch(loadUserAction(null));\n  };\n\n  return (\n    <div className=\"CurrentUser\">\n      <h2 className=\"CurrentUser__title\">\n        <span>\n          Selected user:\n          {currentUser?.id}\n        </span>\n      </h2>\n\n      <h3 className=\"CurrentUser__name\">{currentUser?.name}</h3>\n      <p className=\"CurrentUser__email\">{currentUser?.email}</p>\n      <p className=\"CurrentUser__phone\">{currentUser?.phone}</p>\n      <div className=\"CurrentUser__button-container\">\n        <div className=\"CurrentUser__button\">\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={clearUserHandler}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import './App.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          <CurrentUser />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store';\nimport App from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}